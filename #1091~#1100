#1091 : [기초-종합] 수 나열하기3 
      어떤 규칙에 따라 수를 순서대로 나열한 것을 수열이라고 한다.
      예를 들어
      1 -1 3 -5 11 -21 43 ... 은
      1부터 시작해 이전에 만든 수에 -2를 곱한 다음 1을 더해 다음 수를 만든 수열이다.
      이런 이상한 수열을 알게 된 영일이는 또 궁금해졌다.
      "그럼.... 13번째 나오는 수는 뭘까?"
      영일이는 물론 수학을 아주 잘하지만 이런 문제는 본 적이 거의 없었다...
      그래서 프로그램을 만들어 더 큰 수도 자동으로 계산하고 싶어졌다.
      시작 값(a), 곱할 값(m), 더할 값(d), 몇 번째인지를 나타내는 정수(n)가 입력될 때,
      n번째 수를 출력하는 프로그램을 만들어보자.
      
      ->a,m,d,n=input().split()
        a=int(a)
        m=int(m)
        d=int(d)
        n=int(n)
        for i in range(1,n):
            a=a*m+d
        print(a)  
        
        
        
#1092 : [기초-종합] 함께 문제 푸는 날
      온라인 채점시스템에는 초등학생, 중고등학생, 대학생, 대학원생,
      일반인, 군인, 프로그래머, 탑코더 등 아주 많은 사람들이 들어와 문제를 풀고 있는데,
      실시간 채점 정보는 메뉴의 채점기록(Judge Status)을 통해 살펴볼 수 있다.
      자! 여기서...잠깐..
      같은 날 동시에 가입한 3명의 사람들이 온라인 채점시스템에 들어와 문제를 푸는 날짜가
      매우 규칙적이라고 할 때, 다시 모두 함께 문제를 풀게 되는 그날은 언제일까?
      예를 들어 3명이 같은 날 가입/등업하고, 각각 3일마다, 7일마다, 9일마다
      한 번씩 들어온다면, 처음 가입하고 63일 만에 다시 3명이 함께 문제를 풀게 된다.
      갑자기 힌트?
      왠지 어려워 보이지 않는가?
      수학에서 배운 최소공배수를 생각한 사람들도 있을 것이다. 하지만, 정보에서 배우고 경험하는
      정보과학의 세상은 때때로 컴퓨터의 힘을 빌려 간단한 방법으로 해결할 수 있게 한다.
      아래의 코드를 읽고 이해한 후 도전해 보자.
      day는 날 수, a/b/c는 방문 주기이다.
      ...
      day=1;
      while(day%a!=0 || day%b!=0 || day%c!=0) day++; //이게 무슨 의미일까?
      printf(＂%d＂, day);
      ...
      물론, 아주 많은 다양한 방법이 있을 수 있다.
      정보과학의 문제해결에 있어서 정답은?
      하나가 아니라 주어진 시간/기억공간으로 정확한 결과를 얻을 수 있는 모든 방법이다.
      따라서, 모든 문제들에는 정답이 하나뿐만이 아니다.
      새로운, 더 빠른, 더 간단한 방법을 다양하게 생각해보고 도전해 볼 수 있다.
      
      ->a,b,c=input().split()
        a=int(a)
        b=int(b)
        c=int(c) 
        t_num = 1   #t_num=0 으로 설정하면 0/0이 되기 때문에 t_num=1로 설정해야한다.
        while t_num:
           if t_num % a== 0 and t_num % b == 0 and t_num % c==0:
              print('%d' % t_num)
              break
           t_num = t_num+1
           
           
           
#1093 : [기초-1차원배열] 이상한 출석 번호 부르기1
      정보 선생님은 수업을 시작하기 전에 이상한 출석을 부른다.
      선생님은 출석부를 보고 번호를 부르는데,
      학생들의 얼굴과 이름을 빨리 익히기 위해 번호를 무작위(랜덤)으로 부른다.
      그리고 얼굴과 이름이 잘 기억되지 않는 학생들은 번호를 여러 번 불여,
      이름과 얼굴을 빨리 익히려고 하는 것이다.
      출석 번호를 n번 무작위로 불렀을 때, 각 번호(1 ~ 23)가 불린 횟수를 각각 출력해보자.
      참고
      각 번호가 불린 횟수를 기록하고 출력하기 위해 변수 23개를 선언할 수도 있다.
      하지만 C언어에서는 같은 이름에 번호를 붙여 사용하는 배열(array)을 사용할 수 있다.
      이는 마치 아파트의 동 호수(예를 들어 a동 101호)와 같이 번호를 붙여 집을 구분하는 것과 비슷하다.\
      예를 들어 a동 101호를 다르게 표현하면 a[101] 과 같은 표현이 가능한 것이다.
      이렇게 번호를 붙여 데이터를 저장할 수 있는 변수인 배열을 사용하기 위해서는
      변수처럼, 사용하기 전에 선언해주어야 하는데 아래와 같은 방법으로 가능하다.
      예시
      int a[100]; //a[0] ~ a[99] 까지 정수를 저장할 수 있는 배열을 만들어라.
      for(i=0; i<100; i++)
      {
      scanf("%d", &a[i]); // 각각의 방에 순서대로 반복하면서 값을 입력해라.
      }
      배열을 사용하기 전에 배열에 들어있는 값을 초기화시키는 것이 좋은데,
      다음과 같은 여러 가지 방법이 있다.
      int a[24]={}; //0번부터 23번까지 모두 0으로 초기화된다.
      int a[24]={1,2,3}; //1,2,3 이 순서대로 들어가고 나머지는 모두 0으로 초기화된다.
      int a[3]={1,2,3}; //1,2,3 이 순서대로 저장된다.
      int a[3]={1,2,3,4}; //방을 3개 만들고 값을 4개를 집어넣어라? 오류 발생!
      
      ->



#1094 : [기초-1차원배열] 이상한 출석 번호 부르기2
      정보 선생님은 수업을 시작하기 전에 이상한 출석을 부른다.
      학생들의 얼굴과 이름을 빨리 익히기 위해 번호를 무작위(랜덤)으로 부르는데,
      영일이는 선생님이 부른 번호들을 기억하고 있다가 거꾸로 불러보는 것을 해보고 싶어졌다.
      출석 번호를 n번 무작위로 불렀을 때, 부른 번호를 거꾸로 출력해 보자.
      참고
      배열에 순서대로 기록해 두고, 기록된 내용을 거꾸로 출력하면 된다.
      
      ->a=input()
      a=int(a)
      b=input().split()
      b.reverse()
      for i in range(0, a) : 
      print(b[i])


      

