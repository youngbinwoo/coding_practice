1) 후위 표기식의 계산
   
   AB + CD + *   ->  (A+B)*(C+D)
   
   -> 알고리즘
      후위 표현식을 왼쪽부터 한 글자씩 읽어서
           피연산자이면 스택에 push
           연산자를 만나면 스택에서 pop->(1) , 또 pop=>(2)
           (2) 연산 (1)을 계산, 이 결과를 스택에 push
           
      수식의 끝에 도달하면 스택에서 pop-> 이것이 계산 결과  
      
문제)
  후위표현 수식 계산
  인자로 주어진 문자열 expr 은 소괄호와 사칙연산 기호, 그리고 정수들로만 이루어진 중위 표현 수식입니다.
  함수 solution() 은 이 수식의 값을 계산하여 그 결과를 리턴하도록 작성되어 있습니다. 
  이 함수는 차례로 splitTokens(), infixToPostfix(), 그리고 postfixEval() 함수를 호출하여 이 수식의 값을 계산하는데,
  splitTokens() - 강의 내용에서와 같은 코드로 이미 구현되어 있습니다.
  infixToPostfix() - 지난 강의의 연습문제에서 작성했던 코드를 수정하여, 문자열이 아닌 리스트를 리턴하도록 작성합니다.
  postfixEval() - 이번 강의의 연습문제입니다. 함수의 내용을 완성하세요.
  즉, 두 개의 함수 infixToPostfix() 와 postfixEval() 을 구현하는 연습입니다. 
  스택을 이용하기 위하여 class ArrayStack 이 정의되어 있으므로 그것을 활용하세요.
  [참고] Python 에는 eval() 이라는 built-in 함수가 있어서, 이 함수에 문자열을 인자로 전달하면,
  그 문자열을 그대로 Python 표현식으로 간주하고 계산한 결과를 리턴하도록 되어 있습니다. 
  이 built-in 함수 eval() 을 이용하면 이 연습문제는 전혀 직접 코드를 작성하지 않고도 정답을 낼 수 있을 것이지만, 
  스택을 이용하여 중위표현식을 계산하는 프로그래밍 연습을 위한 것이니, 강의 내용에서 설명한 절차를 수행하도록 코드를 작성해 보세요.
  
답)

      
   
